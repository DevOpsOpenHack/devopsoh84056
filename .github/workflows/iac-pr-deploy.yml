name: IaC Deployment
run-name: ${{ github.actor }} is learning GitHub Actions
on: push
#  push:
#    branches:
#      - main
#    paths:
#      - iac/**
#on: workflow_dispatch

jobs:
  init_resources_prefix:
    name: job1
    runs-on: ubuntu-latest
    outputs:
      # Set output for next job
      RESOURCES_PREFIX: ${{ steps.resources_prefix.outputs.result }}
    steps:
      # Get RESOURCES_PREFIX based on the repo name
      - name: Get repo name
        uses: actions/github-script@v5
        id: resources_prefix
        with:
          result-encoding: string
          script: return context.repo.repo.toLowerCase()

    # Usage for current job: ${{ steps.resources_prefix.outputs.result }}

  deployment:
    defaults:
      run:
        working-directory: iac/terraform  
    runs-on: ubuntu-latest
    env:
      LOCATION: ${{ secrets.LOCATION }}
    steps:
    - uses: actions/checkout@v3

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    # - name: 'Az CLI login'
    #   uses: azure/login@v1
    #   with:
    #     client-id: ${{ secrets.ARM_CLIENT_ID }}
    #     tenant-id: ${{ secrets.ARM_TENANT_ID }}
    #     subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    # - name: 'Run az commands'
    #   run: |
    #     az account show
    #     az group list
    #     pwd 

    - name: Terraform init remote Azure storage
      run: |
        terraform init \
        -backend-config=storage_account_name="${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME}}" \
        -backend-config=container_name="${{ secrets.TFSTATE_STORAGE_CONTAINER_NAME}}" \
        -backend-config=key="${{ secrets.TFSTATE_KEY}}" \
        -backend-config=resource_group_name="${{ secrets.TFSTATE_RESOURCES_GROUP_NAME}}"

    - name: Terraform plan
      run: terraform plan --detailed-exitcode -var="location=${LOCATION}" -var="resources_prefix=${RESOURCES_PREFIX}"

